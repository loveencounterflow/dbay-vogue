{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/server.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-VOGUE/SERVER'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n( require 'mixa/lib/check-package-versions' ) require '../pinned-package-versions.json'\nPATH                      = require 'path'\nHTTP                      = require 'http'\nKoa                       = require 'koa'\nRouter                    = require '@koa/router'\napp                       = new Koa()\nrouter                    = new Router()\n{ Server: Socket_server } = require 'socket.io'\nfile_server               = require 'koa-files'\nmount                     = require 'koa-mount'\n\n\n#-----------------------------------------------------------------------------------------------------------\napp.use ( ctx, next ) =>\n  debug \"^dbay-scr/server@1^ dt-1 before\"\n  await next()\n  debug \"^dbay-scr/server@2^ dt-1 after\"\n  rt = ctx.response.get 'X-Response-Time'\n  help \"^dbay-scr/server@3^ #{ctx.method} #{ctx.url}; dt: #{rt}\"\n  help \"^dbay-scr/server@4^\", ctx.state\n  return null\n#...........................................................................................................\napp.use ( ctx, next ) =>\n  debug \"^dbay-scr/server@5^ dt-2 before\"\n  start = Date.now()\n  await next()\n  debug \"^dbay-scr/server@6^ dt-2 after\"\n  ms    = Date.now() - start\n  ctx.set 'X-Response-Time', \"#{ms} ms\"\n  ( ctx.state.greetings ?= [] ).push \"helo from X-Response-Time setter\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nfile_server_cfg =\n  # Enable or disable accepting ranged requests. Disabling this will not send Accept-Ranges and ignore the\n  # contents of the Range request header. defaults to true.\n  acceptRanges:     true\n  # Set Cache-Control response header, defaults to undefined, see docs: Cache-Control in MDN.\n  cacheControl:     undefined\n  # Enable or disable etag generation, defaults to true.\n  etag:             true\n  # Enable or disable Last-Modified header, defaults to true. Uses the file system's last modified value.\n  # defaults to true.\n  lastModified:     true\n  # Set ignore rules. defaults to undefined. ( path ) => boolean\n  ignore:           undefined\n  # If true, serves after await next(), allowing any downstream middleware to respond first. defaults to false.\n  defer:            false\n\n#-----------------------------------------------------------------------------------------------------------\npaths =\n  public:   PATH.resolve __dirname, '../public'\n### thx to https://stackoverflow.com/a/66377342/7568091 ###\napp.use mount '/public', file_server paths.public, file_server_cfg\n\n#-----------------------------------------------------------------------------------------------------------\nrouter.get 'home', '/', ( ctx ) ->\n  ctx.body = \"a routed response\"\n  help \"^dbay-scr/server@7^\", ctx.router.url 'home', { query: { foo: 'bar', }, }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\napp.use router.routes()\napp.use router.allowedMethods()\n\n#-----------------------------------------------------------------------------------------------------------\n# default response\napp.use ( ctx ) =>\n  # ctx.body = 'Hello World'\n  ctx.throw 404, \"no content under #{ctx.url}\"\n  ( ctx.state.greetings ?= [] ).push \"helo from content handler\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nserver_cfg  =\n  host:       'localhost'\n  port:       3456\nhttp_server = HTTP.createServer app.callback()\n\n#-----------------------------------------------------------------------------------------------------------\nio          = new Socket_server http_server\nio.on 'connection', ( socket ) =>\n  help \"^dbay-scr/server@8^ user connected to scket\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nhttp_server.listen server_cfg, ->\n  debug \"^dbay-scr/server@9^ listening\"\n  return null\n\n\n\n"
  ]
}