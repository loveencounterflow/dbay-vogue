{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/vogue-scheduler.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-VOGUE/SCHEDULER'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n( require 'mixa/lib/check-package-versions' ) require '../pinned-package-versions.json'\nGUY                       = require 'guy'\n{ Vogue_common_mixin }    = require './vogue-common-mixin'\n#...........................................................................................................\nH                         = require './helpers'\n\n\n#===========================================================================================================\nclass @Vogue_scheduler extends Vogue_common_mixin()\n\n  #---------------------------------------------------------------------------------------------------------\n  @C: GUY.lft.freeze\n    abs_duration_pattern:   /^(?<amount>(?:\\d*\\.?\\d+|\\d+\\.?\\d*)(?:[eE][-+]?\\d+)?)\\s(?<unit>.+)$/\n    percentage_pattern:     /^(?<percentage>(?:\\d*\\.?\\d+|\\d+\\.?\\d*)(?:[eE][-+]?\\d+)?)%$/\n    duration_units: [\n      'week',   'weeks',\n      'day',    'days',\n      'hour',   'hours',\n      'minute', 'minutes',\n      'second', 'seconds', ]\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    @cfg        = { @defaults.vogue_scheduler_constructor_cfg..., cfg..., }\n    @types.validate.vogue_scheduler_constructor_cfg @cfg\n    @cfg        = GUY.lft.freeze @cfg\n    @hub        = H.property_pending\n    @rules      = []\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  start: ->\n  stop: ->\n\n  #---------------------------------------------------------------------------------------------------------\n  _parse_abs_duration: ( duration_txt ) ->\n    dayjs = @hub.vdb.db._dayjs\n    match = duration_txt.match @constructor.C.abs_duration_pattern\n    return ( dayjs.duration match.groups.amount, match.groups.unit ).asMilliseconds()\n\n  #---------------------------------------------------------------------------------------------------------\n  _parse_absrel_duration: ( jitter_txt, reference_ms ) ->\n    if ( match = jitter_txt.match @constructor.C.percentage_pattern )?\n      percentage = parseFloat match.groups.percentage\n      return reference_ms * percentage / 100\n    return @_parse_abs_duration jitter_txt\n\n  #---------------------------------------------------------------------------------------------------------\n  add_interval: ( cfg ) ->\n    cfg         = { @defaults.vogue_scheduler_add_interval_cfg..., cfg..., }\n    dayjs       = @hub.vdb.db._dayjs\n    @types.validate.vogue_scheduler_add_interval_cfg cfg\n    { task\n      repeat\n      jitter\n      pause   } = cfg\n    repeat_ms   = @_parse_abs_duration            repeat\n    jitter_ms   = @_parse_absrel_duration jitter, repeat_ms\n    pause_ms    = @_parse_absrel_duration pause,  repeat_ms\n    d           = { running: false, }\n    #.......................................................................................................\n    instrumented_task = =>\n      return null if d.running\n      #.....................................................................................................\n      d.running       = true\n      t0_ms           = Date.now()\n      #.....................................................................................................\n      return null if ( await task() ) is false\n      #.....................................................................................................\n      d.running       = false\n      t1_ms           = Date.now()\n      run_dt_ms       = t1_ms - t0_ms\n      extra_dt_ms     = ( repeat_ms - run_dt_ms )\n      earliest_dt_ms  = ( t1_ms + pause_ms + jitter_ms ) - t0_ms\n      eff_dt_ms       = Math.max extra_dt_ms, earliest_dt_ms\n      abberation_ms   = ( Math.random() * jitter_ms * 2 ) - jitter_ms\n      eff_dt_ms      += abberation_ms\n      d.ref           = @after eff_dt_ms / 1000, instrumented_task\n      #.....................................................................................................\n      return null\n    #.......................................................................................................\n    instrumented_task()\n    return null\n\n  #=========================================================================================================\n  #\n  #---------------------------------------------------------------------------------------------------------\n  @every: GUY.async.every\n  @after: GUY.async.after\n  @sleep: GUY.async.sleep\n  @defer: GUY.async.defer\n  @cease: GUY.async.cease\n  every:  GUY.async.every\n  after:  GUY.async.after\n  sleep:  GUY.async.sleep\n  defer:  GUY.async.defer\n  cease:  GUY.async.cease\n\n\n\n"
  ]
}