{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/vogue-scraper.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-VOGUE/SCRAPER'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nGUY                       = require 'guy'\nH                         = require './helpers'\n{ Vogue_common_mixin }    = require './vogue-common-mixin'\n{ HDML, }                 = require './hdml2'\n\n\n#===========================================================================================================\n### Collection of scrapers ###\nclass @Vogue_scrapers extends Vogue_common_mixin()\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    @cfg        = { @defaults.vogue_scrapers_constructor_cfg..., cfg..., }\n    @types.validate.vogue_scrapers_constructor_cfg @cfg\n    @cfg        = GUY.lft.freeze @cfg\n    @d          = {}\n    @hub        = H.property_pending\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _scraper_from_dsk: ( dsk ) ->\n    unless ( R = @d[ dsk ] )?\n      throw new Error \"^Vogue_scrapers@1^ no such DSK: #{rpr dsk}\"\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  add: ( cfg ) ->\n    cfg         = { @defaults.vogue_scrapers_add_cfg..., cfg..., }\n    @types.validate.vogue_scrapers_add_cfg cfg\n    { dsk\n      scraper } = cfg\n    if @d[ dsk ]?\n      throw new Error \"^Vogue_scrapers@1^ DSK already in use: #{rpr dsk}\"\n    @d[ dsk ]   = scraper\n    scraper._set_hub @hub\n    return null\n\n\n#===========================================================================================================\n### Individual scraper ###\nclass @Vogue_scraper_ABC extends Vogue_common_mixin()\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    @cfg        = { @defaults.vogue_scraper_constructor_cfg..., cfg..., }\n    @types.validate.vogue_scraper_constructor_cfg @cfg\n    @cfg        = GUY.lft.freeze @cfg\n    @hub        = H.property_pending\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _html_from_html_or_buffer: ( html_or_buffer ) ->\n    @types.validate.vogue_html_or_buffer html_or_buffer\n    if ( @types.type_of html_or_buffer ) is 'buffer'\n      return html_or_buffer.toString @cfg.encoding\n    return html_or_buffer\n\n  #---------------------------------------------------------------------------------------------------------\n  get_sparkline: ( trend ) ->\n    # # values = [ { sid: -1, rank: -1,  }, ]\n    # values = []\n    # for [ sid, rank, ] in trend\n    #   values.push { sid, rank: -rank, }\n    # values.unshift { sid: -1, rank: -1, } if values.length < 2\n    #.......................................................................................................\n    dense_trend         = []\n    dense_trend[ sid ]  = rank for [ sid, rank, ] in trend\n    # for rank, sid in dense_trend\n    #   dense_trend[ sid ] = 21 unless rank?\n    # dense_trend.unshift 21 while dense_trend.length < 12\n    values              = []\n    values.push { sid, rank, } for rank, sid in dense_trend\n    #.......................................................................................................\n    values_json = JSON.stringify values\n    #.......................................................................................................\n    R = \"\"\"<script>\n      document.body.append( VOGUE.sparkline_from_trend( #{values_json} ) );\n      </script>\"\"\"\n    #.......................................................................................................\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  html_from_details: ( row ) ->\n    { dsk\n      sid\n      ts\n      pid\n      rank\n      trend\n      details } = row\n    #.......................................................................................................\n    trend       = JSON.parse trend\n    details     = JSON.parse details\n    dsk_html    = HDML.text dsk\n    sid_html    = HDML.text \"#{sid}\"\n    ts_html     = HDML.text ts\n    id_html     = HDML.text pid\n    rank_html   = HDML.text \"#{rank}\"\n    trend_html  = HDML.text JSON.stringify trend\n    title_html  = HDML.insert 'a', { href: details.title_url, }, HDML.text details.title\n    #.......................................................................................................\n    tds         = [\n      HDML.insert 'td', dsk_html\n      HDML.insert 'td', sid_html\n      HDML.insert 'td', id_html\n      HDML.insert 'td', ts_html\n      HDML.insert 'td', rank_html\n      HDML.insert 'td', @get_sparkline trend\n      HDML.insert 'td', trend_html\n      HDML.insert 'td', title_html\n      ]\n    #.......................................................................................................\n    return HDML.insert 'tr', null, tds.join '\\n'\n\n\n\n\n"
  ]
}